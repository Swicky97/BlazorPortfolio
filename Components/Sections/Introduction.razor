@inject IJSRuntime JS

<div class="intro__container">
    <div class="left-column">
        <div class="image-border">
            <!-- Dashed circular borders -->
            <div class="dashed-rect outer"></div>
            <div class="dashed-rect middle"></div>
            <div class="dashed-rect inner"></div>

            <!-- Orbit tracks -->
            <div class="track-wrapper track-cloud">
                <div class="orbit-icon" style="animation-delay: 0s;">
                    <div class="orbit-circle" @onclick='() => SelectTech("Azure")'>
                        <img src="images/azure.png" alt="Azure" />
                    </div>
                </div>
            </div>

            <div class="track-wrapper track-backend">
                <div class="orbit-icon" style="animation-delay: 0s;">
                    <div class="orbit-circle" @onclick='() => SelectTech("C#")'>
                        <img src="images/csharp.png" alt="C#" />
                    </div>
                </div>
                <div class="orbit-icon" style="animation-delay: -16s;">
                    <div class="orbit-circle" @onclick='() => SelectTech("SQL")'>
                        <img src="images/sql.png" alt="SQL" />
                    </div>
                </div>
                <div class="orbit-icon" style="animation-delay: -32s;">
                    <div class="orbit-circle" @onclick='() => SelectTech("Docker")'>
                        <img src="images/docker.png" alt="Docker" />
                    </div>
                </div>
                <div class="orbit-icon" style="animation-delay: -48s;">
                    <div class="orbit-circle" @onclick='() => SelectTech("Rest API")'>
                        <img src="images/API.png" alt="API" />
                    </div>
                </div>
                <!-- Add more backend icons as needed -->
            </div>

            <div class="track-wrapper track-frontend">
                <div class="orbit-icon" style="animation-delay: 0s;">
                    <div class="orbit-circle" @onclick='() => SelectTech("React")'>
                        <img src="images/react.png" alt="React" />
                    </div>
                </div>
                <div class="orbit-icon" style="animation-delay: -8s;">
                    <div class="orbit-circle" @onclick='() => SelectTech("Blazor")'>
                        <img src="images/blazor.png" alt="Blazor" />
                    </div>
                </div>
                <div class="orbit-icon" style="animation-delay: -16s;">
                    <div class="orbit-circle" @onclick='() => SelectTech("HTML 5")'>
                        <img src="images/HTML.png" alt="HTML" />
                    </div>
                </div>
                <div class="orbit-icon" style="animation-delay: -24s;">
                    <div class="orbit-circle" @onclick='() => SelectTech("Javascript")'>
                        <img src="images/javascript.png" alt="JS" />
                    </div>
                </div>
                <div class="orbit-icon" style="animation-delay: -32s;">
                    <div class="orbit-circle" @onclick='() => SelectTech("Typescript")'>
                        <img src="images/typescript.png" alt="Blazor" />
                    </div>
                </div>
                <div class="orbit-icon" style="animation-delay: -40s;">
                    <div class="orbit-circle" @onclick='() => SelectTech("CSS")'>
                        <img src="images/css.png" alt="CSS" />
                    </div>
                </div>
                <div class="orbit-icon" style="animation-delay: -48s;">
                    <div class="orbit-circle" @onclick='() => SelectTech("SASS")'>
                        <img src="images/sass.png" alt="SASS" />
                    </div>
                </div>
                <div class="orbit-icon" style="animation-delay: -56s;">
                    <div class="orbit-circle" @onclick='() => SelectTech("Tailwind")'>
                        <img src="images/tailwind.png" alt="Tailwind" />
                    </div>
                </div>
            </div>

            <!-- Center image -->
            <div class="intro__header-image">
                <img src="images/owl.jpeg" alt="Owl" />
            </div>
        </div>

        @if (!string.IsNullOrEmpty(selectedTech))
        {
            <div class="tech-label" @ref="techLabelRef" @key="selectedTech">
                @selectedTech
            </div>
        }
    </div>

    <div class="right-column">
        <div class="intro__text">
            <h1>@(string.IsNullOrEmpty(displayedText) ? " " : displayedText)<span class="typing-cursor">|</span></h1>
        </div>
    </div>
</div>

@code {
    private string? selectedTech;
    private ElementReference techLabelRef;
    private string fullText = "Hi, I'm Chase — a Full Stack .NET Developer.";
    private string displayedText = "";
    private int charIndex = 0;
    private Timer? typingTimer;

    private async Task SelectTech(string tech)
    {
        selectedTech = tech;
        await Task.Delay(50);
        await JS.InvokeVoidAsync("restartFadeIn", techLabelRef);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            StartTypingEffect();
        }
    }

    private void StartTypingEffect()
    {
        typingTimer = new Timer(TypingCallback, null, 100, 120);
    }

    private void TypingCallback(object? state)
    {
        if (charIndex < fullText.Length)
        {
            displayedText = fullText.Substring(0, charIndex + 1);
            charIndex++;
            InvokeAsync(StateHasChanged);
        }
        else
        {
            typingTimer?.Dispose();
        }
    }
}
